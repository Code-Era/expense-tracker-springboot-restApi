package com.codeera.expensetracker.aop;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.springframework.stereotype.Component;

import java.util.Arrays;


@Component
@Aspect
public class LopggerAspect {



    @Around("execution(* com.codeera.expensetracker.service.*.*(..))")
    public Object logger(ProceedingJoinPoint joinPoint) throws Throwable {
        long startTime = System.currentTimeMillis();


        System.out.println("Method Name: " + joinPoint.getSignature().getName());
        System.out.println("Arguments: " + Arrays.toString(joinPoint.getArgs()));

        Object result = joinPoint.proceed();
       long endTime = System.currentTimeMillis();

       System.out.println("Execution time: " + (endTime - startTime) + " ms");

        return result;
    }

}
